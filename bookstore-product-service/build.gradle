plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'java'
	//For creating json format of open api REST API document
	id "com.github.johnrengelman.processes" version "0.5.0"
	id "org.springdoc.openapi-gradle-plugin" version "1.3.1"
}

group = 'com.learning'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR10")
}

//To add build related information in to actuator 'info' endpoint
springBoot {
	buildInfo()
}

//To generate html5 version of javadoc
javadoc {
	options.addBooleanOption('html5', true)
}

//To generate downloadable json format of swagger document
openApi {
	apiDocsUrl.set("http://localhost:8080/bookstore-order-service/v3/api-docs")
	outputDir.set(file("$buildDir/docs"))
	outputFileName.set("bookstore-order-service.json")
	waitTimeInSeconds.set(10)
}

dependencies {
	compile project(':bookstore-kafka-server')

	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.hibernate:hibernate-envers'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.retry:spring-retry'

	implementation 'org.springframework.cloud:spring-cloud-starter-consul-all'

	implementation 'io.micrometer:micrometer-registry-prometheus'

	implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'

	implementation 'org.springdoc:springdoc-openapi-ui:1.5.2'
	implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.5.2'

	implementation 'net.logstash.logback:logstash-logback-encoder:6.6'
	implementation 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}